chain:
  as: hypershift-powervs-run-e2e
  steps:
    - as: run-e2e
      cli: latest
      commands: |-
        # Load values from existing-resources.json if not provided by the environment

        if [[ -z "${POWERVS_GUID}" ]]; then
          echo "POWERVS_GUID not set, fetching from existing-resources.json"
          POWERVS_GUID=$(jq -r '.cloudInstanceID' "${CLUSTER_PROFILE_DIR}/existing-resources.json")
          export POWERVS_GUID
        else
          echo "Using provided POWERVS_GUID: ${POWERVS_GUID}"
        fi

        if [[ -z "${POWERVS_REGION}" ]]; then
          echo "POWERVS_REGION not set, fetching from existing-resources.json"
          POWERVS_REGION=$(jq -r '.region' "${CLUSTER_PROFILE_DIR}/existing-resources.json")
          export POWERVS_REGION
        else
          echo "Using provided POWERVS_REGION: ${POWERVS_REGION}"
        fi

        if [[ -z "${POWERVS_ZONE}" ]]; then
          echo "POWERVS_ZONE not set, fetching from existing-resources.json"
          POWERVS_ZONE=$(jq -r '.zone' "${CLUSTER_PROFILE_DIR}/existing-resources.json")
          export POWERVS_ZONE
        else
          echo "Using provided POWERVS_ZONE: ${POWERVS_ZONE}"
        fi

        if [[ -z "${POWERVS_VPC_REGION}" ]]; then
          echo "POWERVS_VPC_REGION not set, fetching from existing-resources.json"
          POWERVS_VPC_REGION=$(jq -r '.vpcRegion' "${CLUSTER_PROFILE_DIR}/existing-resources.json")
          export POWERVS_VPC_REGION
        else
          echo "Using provided POWERVS_VPC_REGION: ${POWERVS_VPC_REGION}"
        fi

        if [[ -z "${POWERVS_VPC}" ]]; then
          echo "POWERVS_VPC not set, fetching from existing-resources.json"
          POWERVS_VPC=$(jq -r '.vpc' "${CLUSTER_PROFILE_DIR}/existing-resources.json")
          export POWERVS_VPC
        else
          echo "Using provided POWERVS_VPC: ${POWERVS_VPC}"
        fi

        if [[ -z "${TRANSIT_GATEWAY}" ]]; then
          echo "TRANSIT_GATEWAY not set, fetching from existing-resources.json"
          TRANSIT_GATEWAY=$(jq -r '.transitGateway' "${CLUSTER_PROFILE_DIR}/existing-resources.json")
          export TRANSIT_GATEWAY
        else
          echo "Using provided TRANSIT_GATEWAY: ${TRANSIT_GATEWAY}"
        fi

        if [[ -z "${TRANSIT_GATEWAY_LOCATION}" ]]; then
          echo "TRANSIT_GATEWAY_LOCATION not set, fetching from existing-resources.json"
          TRANSIT_GATEWAY_LOCATION=$(jq -r '.transitGatewayLocation' "${CLUSTER_PROFILE_DIR}/existing-resources.json")
          export TRANSIT_GATEWAY_LOCATION
        else
          echo "Using provided TRANSIT_GATEWAY_LOCATION: ${TRANSIT_GATEWAY_LOCATION}"
        fi
        
        # Running e2e test
        export IBMCLOUD_CREDENTIALS="${CLUSTER_PROFILE_DIR}/credentials"
        bin/test-e2e \
        -test.v \
        -test.timeout=2h10m \
        -test.run="^TestCreateCluster$" \
        --e2e.platform=PowerVS \
        --e2e.pull-secret-file=/etc/ci-pull-credentials/.dockerconfigjson \
        --e2e.base-domain=hypershift.cis.ibm.net \
        --e2e.latest-release-image=${OCP_IMAGE_MULTI} \
        --e2e.node-pool-replicas=2 \
        --e2e.powervs-resource-group=ibm-hypershift-dev \
        --e2e.powervs-region="$POWERVS_REGION" \
        --e2e.powervs-zone="$POWERVS_ZONE" \
        --e2e.powervs-vpc-region="$POWERVS_VPC_REGION" \
        --e2e.powervs-sys-type=s922 \
        --e2e-powervs-power-edge-router=true \
        --e2e-powervs-transit-gateway-location="$TRANSIT_GATEWAY_LOCATION"
      credentials:
        - mount_path: /etc/hypershift-pool-powervs-credentials
          name: hypershift-pool-powervs-credentials
          namespace: test-credentials
        - mount_path: /etc/ci-pull-credentials
          name: ci-pull-credentials
          namespace: test-credentials
      dependencies:
        - env: OCP_IMAGE_MULTI
          name: release:multi-latest
        - env: HYPERSHIFT_RELEASE_LATEST
          name: hypershift-operator
      env:
        - default: ${SHARED_DIR}/management_cluster_kubeconfig
          name: KUBECONFIG
        - name: POWERVS_GUID
          default: ""
          documentation: "IBM Cloud PowerVS Service Instance ID. This flag is used to reuse an existing PowerVS Service Instance resource for the cluster's infrastructure."
        - name: POWERVS_REGION
          default: ""
          documentation: "IBM Cloud PowerVS Region for the cluster."
        - name: POWERVS_ZONE
          default: ""
          documentation: "IBM Cloud PowerVS Zone for the cluster."
        - name: POWERVS_VPC_REGION
          default: ""
          documentation: "IBM Cloud PowerVS VPC Region. Used to specify the region of the VPC for PowerVS."
        - name: POWERVS_VPC
          default: ""
          documentation: "IBM Cloud PowerVS VPC ID. Used to specify the VPC for PowerVS."
        - name: TRANSIT_GATEWAY
          default: ""
          documentation: "Transit Gateway ID to be used for the PowerVS setup."
        - name: TRANSIT_GATEWAY_LOCATION
          default: ""
          documentation: "Transit Gateway Location to be used for the PowerVS setup."
      from: hypershift-tests
      grace_period: 30m0s
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      timeout: 2h30m0s